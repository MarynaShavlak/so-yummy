{"version":3,"file":"static/js/592.c24543da.chunk.js","mappings":"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","sources":["components/RegisterForm/RegisterFormStyled.js","components/RegisterForm/RegisterForm.jsx","pages/RegisterPage/RegisterPage.js"],"sourcesContent":["import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\nimport backMob from '../../images/welcomePage/background-mobile.png';\nimport backMob2x from '../../images/welcomePage/background-mobile@2x.png';\nimport backTabl from '../../images/welcomePage/background-tablet.png';\nimport backTabl2x from '../../images/welcomePage/background-tablet@2x.png';\nimport backDesktop from '../../images/welcomePage/background-desktop.png';\nimport backDesktop2x from '../../images/welcomePage/background-desktop@2x.png';\nimport imgMob from '../../images/welcomePage/Order-mobile@1x-min.png';\nimport imgMob2x from '../../images/welcomePage/Order-mobile@2x-min.png';\nimport imgTabl from '../../images/welcomePage/Order-tablet@1x-min.png';\nimport imgTabl2x from '../../images/welcomePage/Order-tablet@2x-min.png';\nimport imgDesktop from '../../images/welcomePage/Order-desktop@1x-min.png';\nimport imgDesktop2x from '../../images/welcomePage/Order-desktop@2x-min.png';\nimport { ErrorMessage, Field, Form } from 'formik';\n\nconst setFocusColor = (props) => {\n  const { error, touched } = props;\n  if (error === \"Your password is little secure\" && touched) {\n    return \"#F6C23E\"\n  }\n  if (error && touched) {\n        return \"#E74A3B\"\n      } else if (!error && touched) {\n        return \"#3CBC81\"\n      } else {\n        return \"white\"\n      }\n};\n\nexport const Section = styled.section`\n  display: flex;\n  justify-content: center;\n  min-height: 100vh;\n  padding-top: 305px;\n  padding-left: 20px;\n  padding-right: 20px;\n  padding-bottom: 59px;\n  background-color: ${props => props.theme.colors.white};\n  background-image: url('${backMob}');\n  background-position: 50% 100%;\n  background-repeat: no-repeat;\n  background-size: contain;\n\n  @media screen and (min-device-pixel-ratio: 2) and (max-width: 767px),\n    screen and (min-resolution: 192dpi) and (max-width: 767px),\n    screen and (min-resolution: 2dppx) and (max-width: 767px) {\n    background-image: url(${backMob2x});\n  }\n\n  //tablet\n  @media screen and (min-width: 768px) {\n    padding-top: 444px;\n    background-image: url(${backTabl});\n  }\n\n  @media screen and (min-device-pixel-ratio: 2) and (min-width: 768px),\n    screen and (min-resolution: 192dpi) and (min-width: 768px),\n    screen and (min-resolution: 2dppx) and (min-width: 768px) {\n    background-image: url(${backTabl2x});\n  }\n\n  //desktop\n  @media screen and (min-width: 1280px) {\n    padding-top: 115px;\n    background-image: url(${backDesktop});\n  }\n\n  @media screen and (min-device-pixel-ratio: 2) and (min-width: 1280px),\n    screen and (min-resolution: 192dpi) and (min-width: 1280px),\n    screen and (min-resolution: 2dppx) and (min-width: 1280px) {\n    background-image: url(${backDesktop2x});\n  }\n`;\n\nexport const SVG = styled.svg`\n    position: absolute;\n    top: 50%;\n    left: 18px;\n    transform: translateY(-50%);\n    stroke: ${props => props.color};\n`;\n\nexport const InfoSVG = styled.svg`\n  width: 20px;\n  height: 20px;\n  position: absolute;\n  top: 50%;\n  right: 19px;\n  transform: translateY(-50%);\n`;\n\nexport const Error = styled(ErrorMessage)`\n  font-family: 'Poppins', sans-serif;\n  font-style: normal;\n  font-weight: 400;\n  font-size: 14px;\n  line-height: 21px;\n  position: absolute;\n  color: ${props => props.color};\n`;\n\nexport const Label = styled.label`\n  position: relative;\n  &:not(:nth-child(4)) {\n    margin-bottom: 12px;\n    \n    //tablet\n    @media screen and (min-width: 768px) {\n      margin-bottom: 24px;\n    }\n  }\n`;\n\nexport const Input = styled(Field)`\n    width: 279px;\n    height: 45px;\n    padding-top: 12px;\n    padding-left: 40px;\n    padding-bottom: 12px;\n    border: 1px solid rgba(255, 255, 255, 0.5);\n    border-radius: 6px;\n    background-color: transparent;\n    font-size: 14px;\n    line-height: 1.5;\n    letter-spacing: -0.02em;\n    color: ${props => props.theme.colors.white};\n\n    &::placeholder {\n      color: ${props => props.theme.colors.white};\n      opacity: 0.8;\n    }\n\n    &:focus-visible {\n      outline: none;\n      border-color: white;\n      border-color: ${props => setFocusColor(props)};\n    }\n    \n    //tablet\n    @media screen and (min-width: 768px) {\n      padding-top: 16px;\n      padding-left: 50px;\n      padding-bottom: 16px;\n      min-width: 400px;\n      height: 59px;\n      font-size: 18px;\n      line-height: 1.5;\n    }\n`;\n\nexport const Button = styled.button`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    width: 100%;\n    height: 45px;\n    margin-top: 28px;\n    font-size: 16px;\n    line-height: 1.12;\n    border-radius: 6px;\n    border: none;\n    background-color: ${props => props.theme.colors.green};\n    color: ${props => props.theme.colors.white};\n\n    transition: color ${props => props.theme.hover.transition};\n    \n    &:hover,\n    &:focus {\n      color: ${props => props.theme.colors.black};\n    }\n    \n    //tablet\n    @media screen and (min-width: 768px) {\n      height: 59px;\n      margin-top: 50px;\n    }\n`;\n\nexport const StyledForm = styled(Form)`\n    display: flex;\n    flex-direction: column;\n    margin-bottom: 18px;\n    padding: 32px 28px 40px;\n    width: 335px;\n    border-radius: 30px;\n    background-color: #2a2c36;\n    color: ${props => props.theme.colors.white};\n    box-shadow: 0px 4px 48px rgba(0, 0, 0, 0.1);\n    z-index: 2;\n\n    //tablet\n    @media screen and (min-width: 768px) {\n      width: 500px;\n      padding: 44px 50px;\n    }\n`;\n  \nexport const FormWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const LinkStyled = styled(NavLink)`\n  text-decoration: underline;\n  font-family: 'Poppins', sans-serif;\n  font-weight: 400;\n  font-size: 14px;\n  line-height: 1.5;\n  color: ${props => props.theme.colors.white};\n  transition: color ${props => props.theme.hover.transition};\n  \n  //tablet\n  @media screen and (min-width: 768px) {\n    font-size: 16px;\n  }\n  \n  &:hover,\n  &:focus {\n    color: ${props => props.theme.colors.green};\n  }\n  `;\n\nexport const Title = styled.h2`\n  font-family: 'Poppins', sans-serif;\n  font-size: 24px;\n  font-weight: 600;\n  line-height: 1.17;\n  margin-bottom: 18px;\n  letter-spacing: -0.02em;\n\n  //tablet\n  @media screen and (min-width: 768px) {\n    margin-bottom: 32px;\n    font-size: 28px;\n    line-height: 1.07;\n  }\n`;\n\nexport const BackgroundImage = styled.div`\n  position: absolute;\n  top: -218px;\n  right: 50%;\n  transform: translateX(50%);\n  width: 285px;\n  height: 250px;\n  background-image: url('${imgMob}');\n  background-repeat: no-repeat;\n  background-size: contain;\n\n  @media screen and (min-device-pixel-ratio: 2) and (max-width: 767px),\n    screen and (min-resolution: 192dpi) and (max-width: 767px),\n    screen and (min-resolution: 2dppx) and (max-width: 767px) {\n    background-image: url(${imgMob2x});\n  }\n\n    //tablet\n  @media screen and (min-width: 768px) {\n    top: -348px;\n    width: 409px;\n    height: 359px;\n    background-image: url(${imgTabl});\n  }\n\n  @media screen and (min-device-pixel-ratio: 2) and (min-width: 768px),\n    screen and (min-resolution: 192dpi) and (min-width: 768px),\n    screen and (min-resolution: 2dppx) and (min-width: 768px) {\n    background-image: url(${imgTabl2x});\n  }\n\n  //desktop\n  @media screen and (min-width: 1280px) {\n    position: static;\n    transform: translateX(0);\n    width: 532px;\n    height: 468px;\n    background-image: url(${imgDesktop});\n  }\n\n  @media screen and (min-device-pixel-ratio: 2) and (min-width: 1280px),\n    screen and (min-resolution: 192dpi) and (min-width: 1280px),\n    screen and (min-resolution: 2dppx) and (min-width: 1280px) {\n    background-image: url(${imgDesktop2x});\n  }\n  `;\n\nexport const Container = styled.div`\n  position: relative;\n\n  @media screen and (min-width: 1280px) {\n    display: flex;\n    gap: 115px;\n  }\n`;","import { useNavigate } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { toast } from 'react-toastify';\nimport { loginUser, registerUser } from 'redux/user/userOperations';\nimport { Formik } from 'formik';\nimport { BackgroundImage, Button, Container, Error, FormWrapper, InfoSVG, Input, Label, LinkStyled, SVG, Section, StyledForm, Title } from './RegisterFormStyled';\nimport sprite from '../../images/welcomePage/symbol-defs.svg';\n\nconst setSVGColor = (errors, touched) => {\n  if (errors === \"Your password is little secure\" && touched) {\n    return \"#F6C23E\"\n  }\n  if (errors && touched) {\n        return \"#E74A3B\"\n      } else if (!errors && touched) {\n        return \"#3CBC81\"\n      } else {\n        return \"white\"\n      }\n};\n\nconst setInfoSVG = (errors, touched) => {\n  if (errors === \"Your password is little secure\" && touched) {\n    return <InfoSVG><use href={sprite + '#icon-warning'} /></InfoSVG>\n  }\n  if (errors && touched) {\n        return <InfoSVG><use href={sprite + '#icon-error'} /></InfoSVG>\n      } else if (!errors && touched) {\n        return <InfoSVG><use href={sprite + '#icon-success'} /></InfoSVG>\n      }\n    return;\n};\n\nexport const RegisterForm = () => {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  function validateName(value) {\n    let error;\n    const lettersOnly = /^[a-zA-Z]+$/.test(value);\n    if (!value) {\n      error = 'Required';\n    } else if (!lettersOnly) {\n      error = 'Invalid name';\n    } else if (value.length < 2) {\n      error = 'Too Short!';\n    }\n    return error;\n  }\n\n  function validateEmail(value) {\n    let error;\n    if (!value) {\n      error = 'Required';\n    } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(value)) {\n      error = 'Invalid email address';\n    }\n    return error;\n  }\n\n  function validatePassword(value) {\n    let error;\n    const digitsOnly = string =>\n      [...string].every(c => '0123456789'.includes(c));\n    if (!value) {\n      error = 'Required!';\n    } else if (value.length < 8) {\n      error = 'Password must be at least 8 digits';\n    } else if (digitsOnly && value.length === 8) {\n      error = 'Your password is little secure';\n    }\n\n    return error;\n  }\n\n  return (\n    <Section>\n      <Container>\n        <BackgroundImage />\n        <FormWrapper>\n          <Formik\n          initialValues={{\n            name: '',\n            email: '',\n            password: '',\n          }}\n          validateOnChange={true}\n          validateOnBlur={true}\n          onSubmit={(values, actions) => {\n            const { email, password } = values;\n\n            setTimeout(\n              dispatch(registerUser(values)).then(() => {\n                dispatch(loginUser({ email, password }))\n                  .then(() => {\n                    toast.success(\n                      `User ${values.name} email ${values.email} successfully registered`\n                    );\n                    navigate('/main');\n                  })\n                  .catch(error => {\n                    if (error === 'Request failed with status code 409') {\n                      return toast.error(\n                        'User already exists. Try another email'\n                      );\n                    }\n                    if (error === 'Request failed with status code 400') {\n                      actions.resetForm();\n                      return toast.error('Oops something went wrong');\n                    }\n                  });\n              }),\n              2000\n            );\n          }}\n          >\n            {({ errors, touched }) => {\n              return (<StyledForm>\n                <Title>Registration</Title>\n                <Label>\n                    <SVG width=\"24\" height=\"24\" color={setSVGColor(errors.name, touched.name)}>\n                      <use href={sprite + '#icon-user'} />\n                  </SVG>\n                  {setInfoSVG(errors.name, touched.name)}\n                    <Input name=\"name\" placeholder=\"Name\" validate={validateName} error={errors.name} touched={touched.name?.toString()} />\n                  <Error name=\"name\" component=\"div\" color={setSVGColor(errors.name, touched.name)}/>\n                </Label>\n\n                <Label>\n                    <SVG width=\"24\" height=\"24\" color={setSVGColor(errors.email, touched.email)}>\n                      <use href={sprite + '#icon-mail'} />\n                  </SVG>\n                  {setInfoSVG(errors.email, touched.email)}\n                    <Input\n                      name=\"email\"\n                      placeholder=\"Email\"\n                      validate={validateEmail}\n                      error={errors.email} \n                      touched={touched.email?.toString()} \n                    />\n                  <Error name=\"email\" component=\"div\" color={setSVGColor(errors.email, touched.email)}/>\n                </Label>\n\n                <Label>\n                    <SVG width=\"24\" height=\"24\" color={setSVGColor(errors.password, touched.password)}>\n                      <use href={sprite + '#icon-lock'} />\n                  </SVG>\n                  {setInfoSVG(errors.password, touched.password)}\n                    <Input\n                      name=\"password\"\n                      placeholder=\"Password\"\n                      type=\"password\"\n                      validate={validatePassword}\n                      error={errors.password} \n                      touched={touched.password?.toString()} \n                    />\n                  <Error name=\"password\" component=\"div\" color={setSVGColor(errors.password, touched.password)}/>\n                </Label>\n                <Button type=\"submit\">Sign up</Button>\n              </StyledForm>)\n            }}\n            </Formik>\n          <LinkStyled to=\"/signin\">Sign in</LinkStyled>\n        </FormWrapper>\n      </Container>\n    </Section>\n  );\n};\n","import { RegisterForm } from 'components/RegisterForm/RegisterForm';\n\nexport default function RegisterPage() {\n  return <RegisterForm />\n}\n"],"names":["Section","styled","section","_templateObject","_taggedTemplateLiteral","props","theme","colors","white","backMob","backMob2x","backTabl","backTabl2x","backDesktop","backDesktop2x","SVG","svg","_templateObject2","color","InfoSVG","_templateObject3","Error","ErrorMessage","_templateObject4","Label","label","_templateObject5","Input","Field","_templateObject6","error","touched","setFocusColor","Button","button","_templateObject7","green","hover","transition","black","StyledForm","Form","_templateObject8","FormWrapper","div","_templateObject9","LinkStyled","NavLink","_templateObject10","Title","h2","_templateObject11","BackgroundImage","_templateObject12","imgMob","imgMob2x","imgTabl","imgTabl2x","imgDesktop","imgDesktop2x","Container","_templateObject13","setSVGColor","errors","setInfoSVG","_jsx","children","href","sprite","RegisterForm","dispatch","useDispatch","navigate","useNavigate","validateName","value","lettersOnly","test","length","validateEmail","validatePassword","string","every","c","includes","_jsxs","Formik","initialValues","name","email","password","validateOnChange","validateOnBlur","onSubmit","values","actions","setTimeout","registerUser","then","loginUser","toast","success","concat","catch","resetForm","_ref","_touched$name","_touched$email","_touched$password","width","height","placeholder","validate","toString","component","type","to","RegisterPage"],"sourceRoot":""}